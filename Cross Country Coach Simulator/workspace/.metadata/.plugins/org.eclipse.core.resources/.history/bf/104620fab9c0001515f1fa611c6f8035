package coachsimulator;

public class Loop {
	   private boolean running = true;
	   private boolean paused = false;
	   private int FPS = 60;
	   private int counter = 0;

	   public void runGameLoop()
	   {
	      Thread loop = new Thread()
	      {
	         public void run()
	         {
	            gameLoop();
	         }
	      };
	      loop.start();
	   }
	   
	   private void gameLoop()
	   {
	      final double framerate = 30.0;
	      final double timeDif = 1000000000 / framerate;
	      final int maxUpdates = 5;
	      double lastUpdateTime = System.nanoTime();
	      double lastRenderTime = System.nanoTime();
	      
	      final double TARGET_FPS = 60;
	      final double TARGET_TIME_DIFFERENCE = 1000000000 / TARGET_FPS;
	      
	      int lastSecondTime = (int) (lastUpdateTime / 1000000000);
	      
	      while (running)
	      {
	         double now = System.nanoTime();
	         int updateCount = 0;
	         
	         if (!paused)
	         {
	            while( now - lastUpdateTime > timeDif && updateCount < maxUpdates )
	            {
	               Game.update();
	               lastUpdateTime += timeDif;
	               updateCount++;
	            }
	   
	            if ( now - lastUpdateTime > timeDif)
	            {
	               lastUpdateTime = now - timeDif;
	            }
	         
	            float interpolation = Math.min(1.0f, (float) ((now - lastUpdateTime) / timeDif) );
	            Game.render();
	            lastRenderTime = now;
	         
	            int thisSecond = (int) (lastUpdateTime / 1000000000);
	            if (thisSecond > lastSecondTime)
	            {
	               System.out.println("fps: ");
	               FPS = counter;
	               counter = 0;
	               lastSecondTime = thisSecond;
	            }
	         
	            while ( now - lastRenderTime < TARGET_TIME_DIFFERENCE && now - lastUpdateTime < timeDif)
	            {
	               Thread.yield();
	            
	               try {Thread.sleep(1);} catch(Exception e) {} 
	            
	               now = System.nanoTime();
	            }
	         }
	      }
	   }
	   

}